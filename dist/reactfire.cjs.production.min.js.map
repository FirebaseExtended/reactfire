{"version":3,"file":"reactfire.cjs.production.min.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/firebaseApp.tsx","../src/auth.tsx","../src/database.tsx","../src/SuspenseSubject.ts","../src/useObservable.ts","../src/firestore.tsx","../src/remote-config.tsx","../src/storage.tsx","../src/sdk.tsx","../src/index.ts","../src/performance.tsx"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import * as React from 'react';\nimport { getApps, initializeApp, registerVersion } from 'firebase/app';\n\nimport type { FirebaseApp, FirebaseOptions } from 'firebase/app';\n\n// INVESTIGATE I don't like magic strings, can we have export this in js-sdk?\nconst DEFAULT_APP_NAME = '[DEFAULT]';\n\nconst FirebaseAppContext = React.createContext<FirebaseApp | undefined>(undefined);\nconst SuspenseEnabledContext = React.createContext<boolean>(false);\n\ninterface FirebaseAppProviderProps {\n  firebaseApp?: FirebaseApp;\n  firebaseConfig?: FirebaseOptions;\n  appName?: string;\n  suspense?: boolean;\n}\n\n// @ts-expect-error: \"__REACTFIRE_VERSION__\" is replaced with actual ReactFire version (see babel.config.js)\nexport const version = __REACTFIRE_VERSION__;\n\nconst shallowEq = (a: { [key: string]: any }, b: { [key: string]: any }) => a === b || [...Object.keys(a), ...Object.keys(b)].every((key) => a[key] === b[key]);\n\nexport function FirebaseAppProvider(props: React.PropsWithChildren<FirebaseAppProviderProps>) {\n  const { firebaseConfig, appName, suspense } = props;\n\n  const firebaseApp: FirebaseApp = React.useMemo(() => {\n    if (props.firebaseApp) {\n      return props.firebaseApp;\n    }\n\n    const existingApp = getApps().find((app) => app.name === (appName || DEFAULT_APP_NAME));\n    if (existingApp) {\n      if (firebaseConfig && shallowEq(existingApp.options, firebaseConfig)) {\n        return existingApp;\n      } else {\n        throw new Error(\n          `Does not match the options already provided to the ${appName || 'default'} firebase app instance, give this new instance a different appName.`\n        );\n      }\n    } else {\n      if (!firebaseConfig) {\n        throw new Error('No firebaseConfig provided');\n      }\n\n      const reactVersion = React.version || 'unknown';\n      registerVersion('react', reactVersion);\n      registerVersion('reactfire', version);\n      return initializeApp(firebaseConfig, appName);\n    }\n  }, [props.firebaseApp, firebaseConfig, appName]);\n\n  return (\n    <FirebaseAppContext.Provider value={firebaseApp}>\n      <SuspenseEnabledContext.Provider value={suspense ?? false} {...props} />\n    </FirebaseAppContext.Provider>\n  );\n}\n\nexport function useIsSuspenseEnabled(): boolean {\n  const suspense = React.useContext(SuspenseEnabledContext);\n\n  // default to false if not available in context\n  return suspense ?? false;\n}\n\nexport function useSuspenseEnabledFromConfigAndContext(suspenseFromConfig?: boolean): boolean {\n  let suspenseFromContext = React.useContext(SuspenseEnabledContext);\n\n  // prioritize config over context\n  if (suspenseFromConfig !== undefined) {\n    return suspenseFromConfig;\n  }\n\n  return suspenseFromContext;\n}\n\nexport function useFirebaseApp() {\n  const firebaseApp = React.useContext(FirebaseAppContext);\n  if (!firebaseApp) {\n    throw new Error('Cannot call useFirebaseApp unless your component is within a FirebaseAppProvider');\n  }\n\n  return firebaseApp;\n}\n","import * as React from 'react';\nimport { user } from 'rxfire/auth';\nimport { preloadObservable, ReactFireOptions, useAuth, useObservable, ObservableStatus, ReactFireError } from './';\nimport { from, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { useSuspenseEnabledFromConfigAndContext } from './firebaseApp';\n\nimport type { Auth, User, IdTokenResult } from 'firebase/auth';\ntype Claims = IdTokenResult['claims'];\n\nexport async function preloadUser(authResolver: () => Promise<Auth>) {\n  const auth = await authResolver();\n  const user$ = preloadObservable(user(auth), `auth:user:${auth.name}`);\n  return user$.toPromise();\n}\n\n/**\n * Subscribe to Firebase auth state changes, including token refresh\n *\n * @param options\n */\nexport function useUser<T = unknown>(options?: ReactFireOptions<T>): ObservableStatus<User | null> {\n  const auth = useAuth();\n\n  const observableId = `auth:user:${auth.name}`;\n  const observable$ = user(auth);\n\n  let currentUser = auth.currentUser;\n\n  // Only use options.initialData if auth.currentUser is unavailable\n  if (!currentUser && (options?.initialData ?? options?.startWithValue)) {\n    currentUser = options.initialData ?? options.startWithValue;\n  }\n\n  return useObservable(observableId, observable$, { ...options, initialData: currentUser });\n}\n\nexport function useIdTokenResult(user: User, forceRefresh: boolean = false, options?: ReactFireOptions<IdTokenResult>): ObservableStatus<IdTokenResult> {\n  if (!user) {\n    throw new Error('you must provide a user');\n  }\n\n  const observableId = `auth:idTokenResult:${user.uid}:forceRefresh=${forceRefresh}`;\n  const observable$ = from(user.getIdTokenResult(forceRefresh));\n\n  return useObservable(observableId, observable$, options);\n}\n\nexport interface AuthCheckProps {\n  fallback: React.ReactNode;\n  children: React.ReactNode;\n  requiredClaims?: Object;\n}\n\nexport interface ClaimsCheckProps {\n  user: User;\n  fallback: React.ReactNode;\n  children: React.ReactNode;\n  requiredClaims: { [key: string]: any };\n}\n\nexport interface ClaimCheckErrors {\n  [key: string]: any[];\n}\n\nexport type SigninCheckResult =\n  | {\n      signedIn: false;\n      hasRequiredClaims: false;\n      errors: {};\n      user: null;\n    }\n  | {\n      signedIn: true;\n      hasRequiredClaims: boolean;\n      errors: ClaimCheckErrors;\n      user: User;\n    };\n\nexport interface SignInCheckOptionsBasic extends ReactFireOptions<SigninCheckResult> {\n  forceRefresh?: boolean;\n}\n\nexport interface SignInCheckOptionsClaimsObject extends SignInCheckOptionsBasic {\n  requiredClaims: Claims;\n}\n\nexport interface ClaimsValidator {\n  (claims: Claims): {\n    hasRequiredClaims: boolean;\n    errors: ClaimCheckErrors | {};\n  };\n}\n\nexport interface SignInCheckOptionsClaimsValidator extends SignInCheckOptionsBasic {\n  validateCustomClaims: ClaimsValidator;\n}\n\n/**\n * Subscribe to the signed-in status of a user.\n *\n * ```ts\n * const { status, data:signInCheckResult } = useSigninCheck();\n *\n * if (status === 'loading') {\n *   return <LoadingSpinner />}\n *\n *\n * if (signInCheckResult.signedIn === true) {\n *   return <ProfilePage user={signInCheckResult.user}/>\n * } else {\n *   return <SignInForm />\n * }\n * ```\n *\n * Optionally check [custom claims](https://firebase.google.com/docs/auth/admin/custom-claims) of a user as well.\n *\n * ```ts\n * // pass in an object describing the custom claims a user must have\n * const {status, data: signInCheckResult} = useSignInCheck({requiredClaims: {admin: true}});\n *\n * // pass in a custom claims validator function\n * const {status, data: signInCheckResult} = useSignInCheck({validateCustomClaims: (userClaims) => {\n *   // custom validation logic...\n * }});\n *\n * // You can optionally force-refresh the token\n * const {status, data: signInCheckResult} = useSignInCheck({forceRefresh: true, requiredClaims: {admin: true}});\n * ```\n */\nexport function useSigninCheck(\n  options?: SignInCheckOptionsBasic | SignInCheckOptionsClaimsObject | SignInCheckOptionsClaimsValidator\n): ObservableStatus<SigninCheckResult> {\n  // If both `requiredClaims` and `validateCustomClaims` are provided, we won't know which one to use\n  if (options?.hasOwnProperty('requiredClaims') && options?.hasOwnProperty('validateCustomClaims')) {\n    throw new Error('Cannot have both \"requiredClaims\" and \"validateCustomClaims\". Use one or the other.');\n  }\n\n  const auth = useAuth();\n\n  // ObservableId should change for different options configurations to ensure no cache collisions\n  let observableId = `auth:signInCheck:${auth.name}::forceRefresh:${!!options?.forceRefresh}`;\n  if (options?.forceRefresh) {\n    observableId = `${observableId}:forceRefresh:${options.forceRefresh}`;\n  }\n  if (options?.hasOwnProperty('requiredClaims')) {\n    observableId = `${observableId}:requiredClaims:${JSON.stringify((options as SignInCheckOptionsClaimsObject).requiredClaims)}`;\n  } else if (options?.hasOwnProperty('validateCustomClaims')) {\n    // TODO(jamesdaniels): Check if stringifying this function breaks in IE11\n    observableId = `${observableId}:validateCustomClaims:${JSON.stringify((options as SignInCheckOptionsClaimsValidator).validateCustomClaims)}`;\n  }\n\n  const observable = user(auth).pipe(\n    switchMap((user) => {\n      if (!user) {\n        const result: SigninCheckResult = { signedIn: false, hasRequiredClaims: false, errors: {}, user: null };\n        return of(result);\n      } else if (options && (options.hasOwnProperty('requiredClaims') || options.hasOwnProperty('validateCustomClaims'))) {\n        return from(user.getIdTokenResult(options?.forceRefresh ?? false)).pipe(\n          map((idTokenResult) => {\n            let validator: ClaimsValidator;\n\n            if (options.hasOwnProperty('requiredClaims')) {\n              validator = getClaimsObjectValidator((options as SignInCheckOptionsClaimsObject).requiredClaims);\n            } else {\n              validator = (options as SignInCheckOptionsClaimsValidator).validateCustomClaims;\n            }\n\n            const { hasRequiredClaims, errors } = validator(idTokenResult.claims);\n\n            const result: SigninCheckResult = { signedIn: true, hasRequiredClaims, errors, user: user };\n            return result;\n          })\n        );\n      } else {\n        // If no claims are provided to be checked, `hasRequiredClaims` is true\n        const result: SigninCheckResult = { signedIn: true, hasRequiredClaims: true, errors: {}, user: user };\n        return of(result);\n      }\n    })\n  );\n\n  return useObservable(observableId, observable);\n}\n\nfunction getClaimsObjectValidator(requiredClaims: Claims): ClaimsValidator {\n  return function claimsObjectValidator(userClaims) {\n    const errors: { [key: string]: ReactFireError[] } = {};\n\n    Object.keys(requiredClaims).forEach((claim) => {\n      if (requiredClaims[claim] !== userClaims[claim]) {\n        errors[claim] = [new ReactFireError('auth/missing-claim', `Expected \"${requiredClaims[claim]}\", but user has \"${userClaims[claim]}\" instead`)];\n      }\n    });\n\n    return {\n      hasRequiredClaims: Object.keys(errors).length === 0,\n      errors,\n    };\n  };\n}\n\n/**\n * @deprecated Use `useSignInCheck` instead\n *\n * Conditionally render children based on [custom claims](https://firebase.google.com/docs/auth/admin/custom-claims).\n *\n * Meant for Concurrent mode only (`<FirebaseAppProvider suspense=true />`). [More detail](https://github.com/FirebaseExtended/reactfire/issues/325#issuecomment-827654376).\n */\nexport function ClaimsCheck({ user, fallback, children, requiredClaims }: ClaimsCheckProps) {\n  const { data } = useIdTokenResult(user, false);\n  const { claims } = data;\n  const missingClaims: { [key: string]: { expected: string; actual: string | undefined } } = {};\n\n  const suspenseMode = useSuspenseEnabledFromConfigAndContext();\n  if (!suspenseMode) {\n    console.warn(\n      'ClaimsCheck is deprecated and only works when ReactFire is in experimental Suspense Mode. Use useSigninCheck or set suspense={true} in FirebaseAppProvider if you want to use this component.'\n    );\n  }\n\n  if (requiredClaims) {\n    Object.keys(requiredClaims).forEach((claim) => {\n      if (requiredClaims[claim] !== claims[claim]) {\n        missingClaims[claim] = {\n          expected: requiredClaims[claim],\n          actual: claims[claim]?.toString(),\n        };\n      }\n    });\n  }\n\n  if (Object.keys(missingClaims).length === 0) {\n    return <>{children}</>;\n  } else {\n    return <>{fallback}</>;\n  }\n}\n\n/**\n * @deprecated Use `useSignInCheck` instead\n *\n * Conditionally render children based on signed-in status and [custom claims](https://firebase.google.com/docs/auth/admin/custom-claims).\n *\n * Meant for Concurrent mode only (`<FirebaseAppProvider suspense=true />`). [More detail](https://github.com/FirebaseExtended/reactfire/issues/325#issuecomment-827654376).\n */\nexport function AuthCheck({ fallback, children, requiredClaims }: AuthCheckProps): JSX.Element {\n  const { data: user } = useUser<User>();\n\n  const suspenseMode = useSuspenseEnabledFromConfigAndContext();\n  if (!suspenseMode) {\n    console.warn(\n      'AuthCheck is deprecated and only works when ReactFire is in experimental Suspense Mode. Use useSigninCheck or set suspense={true} in FirebaseAppProvider if you want to use this component.'\n    );\n  }\n\n  if (user) {\n    return requiredClaims ? (\n      <ClaimsCheck user={user} fallback={fallback} requiredClaims={requiredClaims}>\n        {children}\n      </ClaimsCheck>\n    ) : (\n      <>{children}</>\n    );\n  } else {\n    return <>{fallback}</>;\n  }\n}\n","import { list, object, QueryChange, listVal } from 'rxfire/database';\nimport { ReactFireOptions, useObservable, checkIdField, ObservableStatus, ReactFireGlobals } from './';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport type { Query as DatabaseQuery, DatabaseReference } from 'firebase/database';\n\n// Since we're side-effect free, we need to ensure our observableId cache is global\nconst cachedQueries: Array<DatabaseQuery> = (globalThis as any as ReactFireGlobals)._reactFireDatabaseCachedQueries || [];\n\nif (!(globalThis as any as ReactFireGlobals)._reactFireDatabaseCachedQueries) {\n  (globalThis as any as ReactFireGlobals)._reactFireDatabaseCachedQueries = cachedQueries;\n}\n\nfunction getUniqueIdForDatabaseQuery(query: DatabaseQuery) {\n  const index = cachedQueries.findIndex((cachedQuery) => cachedQuery.isEqual(query));\n  if (index > -1) {\n    return index;\n  }\n  return cachedQueries.push(query) - 1;\n}\n\n/**\n * Subscribe to a Realtime Database object\n *\n * @param ref - Reference to the DB object you want to listen to\n * @param options\n */\nexport function useDatabaseObject<T = unknown>(ref: DatabaseReference, options?: ReactFireOptions<T>): ObservableStatus<QueryChange | T> {\n  const observableId = `database:object:${ref.toString()}`;\n  const observable$ = object(ref);\n\n  return useObservable(observableId, observable$, options);\n}\n\n// ============================================================================\n// TODO: switch to rxfire's objectVal once this PR is merged:\n// https://github.com/firebase/firebase-js-sdk/pull/2352\n\nfunction objectVal<T>(query: DatabaseQuery, keyField?: string): Observable<T> {\n  return object(query).pipe(map((change) => changeToData(change, keyField) as T));\n}\n\nfunction changeToData(change: QueryChange, keyField?: string): {} {\n  const val = change.snapshot.val();\n\n  // don't worry about setting IDs if the value is a primitive type\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  return {\n    ...change.snapshot.val(),\n    ...(keyField ? { [keyField]: change.snapshot.key } : null),\n  };\n}\n// ============================================================================\n\nexport function useDatabaseObjectData<T>(ref: DatabaseReference, options?: ReactFireOptions<T>): ObservableStatus<T> {\n  const idField = options ? checkIdField(options) : 'NO_ID_FIELD';\n  const observableId = `database:objectVal:${ref.toString()}:idField=${idField}`;\n  const observable$ = objectVal<T>(ref, idField);\n\n  return useObservable(observableId, observable$, options);\n}\n\n/**\n * Subscribe to a Realtime Database list\n *\n * @param ref - Reference to the DB List you want to listen to\n * @param options\n */\nexport function useDatabaseList<T = { [key: string]: unknown }>(\n  ref: DatabaseReference | DatabaseQuery,\n  options?: ReactFireOptions<T[]>\n): ObservableStatus<QueryChange[] | T[]> {\n  const hash = `database:list:${getUniqueIdForDatabaseQuery(ref)}`;\n  const observable$ = list(ref);\n\n  return useObservable(hash, observable$, options);\n}\n\nexport function useDatabaseListData<T = { [key: string]: unknown }>(\n  ref: DatabaseReference | DatabaseQuery,\n  options?: ReactFireOptions<T[]>\n): ObservableStatus<T[] | null> {\n  const idField = options ? checkIdField(options) : 'NO_ID_FIELD';\n  const observableId = `database:listVal:${getUniqueIdForDatabaseQuery(ref)}:idField=${idField}`;\n  const observable$ = listVal<T>(ref, idField);\n  return useObservable(observableId, observable$, options);\n}\n","import { empty, Observable, Subject, Subscriber, Subscription } from 'rxjs';\nimport { catchError, shareReplay, tap } from 'rxjs/operators';\n\nexport class SuspenseSubject<T> extends Subject<T> {\n  private _value: T | undefined;\n  private _hasValue = false;\n  private _timeoutHandler: NodeJS.Timeout;\n  private _firstEmission: Promise<void>;\n  private _error: any = undefined;\n  private _innerObservable: Observable<T>;\n  private _warmupSubscription: Subscription;\n\n  // @ts-expect-error: TODO: double check to see if this is an RXJS thing or if we should listen to TS\n  private _innerSubscriber: Subscription;\n  // @ts-expect-error: TODO: double check to see if this is an RXJS thing or if we should listen to TS\n  private _resolveFirstEmission: () => void;\n\n  constructor(innerObservable: Observable<T>, private _timeoutWindow: number) {\n    super();\n    this._firstEmission = new Promise<void>((resolve) => (this._resolveFirstEmission = resolve));\n    this._innerObservable = innerObservable.pipe(\n      tap({\n        next: (v) => {\n          this._next(v);\n        },\n        error: (e) => {\n          // save the error, so that we can raise on subscription or .value\n          // resolve the promise, so suspense tries again\n          this._error = e;\n          this._resolveFirstEmission();\n        },\n      }),\n      catchError(() => empty()),\n      shareReplay(1)\n    );\n    // warm up the observable\n    this._warmupSubscription = this._innerObservable.subscribe();\n\n    // set a timeout for resetting the cache, subscriptions will cancel the timeout\n    // and reschedule again on unsubscribe\n    this._timeoutHandler = setTimeout(this._reset.bind(this), this._timeoutWindow);\n  }\n\n  get hasValue(): boolean {\n    // hasValue returns true if there's an error too\n    // so that after we resolve the promise & useObservable is called again\n    // we won't throw again\n    return this._hasValue || !!this._error;\n  }\n\n  get value(): T | undefined {\n    // TODO figure out how to reset the cache here, if I _reset() here before throwing\n    // it doesn't seem to work.\n    // As it is now, this will burn the cache entry until the timeout fires.\n    if (this._error) {\n      throw this._error;\n    }\n    return this._value;\n  }\n\n  get firstEmission(): Promise<void> {\n    return this._firstEmission;\n  }\n\n  private _next(value: T) {\n    this._hasValue = true;\n    this._value = value;\n    this._resolveFirstEmission();\n  }\n\n  private _reset() {\n    // seems to be undefined in tests?\n    if (this._warmupSubscription) {\n      this._warmupSubscription.unsubscribe();\n    }\n    this._hasValue = false;\n    this._value = undefined;\n    this._error = undefined;\n    this._firstEmission = new Promise<void>((resolve) => (this._resolveFirstEmission = resolve));\n  }\n\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this._timeoutHandler) {\n      clearTimeout(this._timeoutHandler);\n    }\n    this._innerSubscriber = this._innerObservable.subscribe(subscriber);\n    return this._innerSubscriber;\n  }\n\n  get ourError() {\n    return this._error;\n  }\n}\n","import * as React from 'react';\nimport { Observable } from 'rxjs';\nimport { SuspenseSubject } from './SuspenseSubject';\nimport { useSuspenseEnabledFromConfigAndContext } from './firebaseApp';\nimport { ReactFireGlobals, ReactFireOptions } from './';\n\nconst DEFAULT_TIMEOUT = 30_000;\n\n// Since we're side-effect free, we need to ensure our observable cache is global\nconst preloadedObservables: Map<string, SuspenseSubject<any>> = (globalThis as any as ReactFireGlobals)._reactFirePreloadedObservables || new Map();\n\nif (!(globalThis as any as ReactFireGlobals)._reactFirePreloadedObservables) {\n  (globalThis as any as ReactFireGlobals)._reactFirePreloadedObservables = preloadedObservables;\n}\n\n// Starts listening to an Observable.\n// Call this once you know you're going to render a\n// child that will consume the observable\nexport function preloadObservable<T>(source: Observable<T>, id: string) {\n  if (preloadedObservables.has(id)) {\n    return preloadedObservables.get(id) as SuspenseSubject<T>;\n  } else {\n    const observable = new SuspenseSubject(source, DEFAULT_TIMEOUT);\n    preloadedObservables.set(id, observable);\n    return observable;\n  }\n}\n\nexport interface ObservableStatus<T> {\n  /**\n   * The loading status.\n   *\n   * - `loading`: Waiting for the first value from an observable\n   * - `error`: Something went wrong. Check `ObservableStatus.error` for more details\n   * - `success`: The hook has emitted at least one value\n   *\n   * If `initialData` is passed in, this will skip `loading` and go straight to `success`.\n   */\n  status: 'loading' | 'error' | 'success';\n  /**\n   * Indicates whether the hook has emitted a value at some point\n   *\n   * If `initialData` is passed in, this will be `true`.\n   */\n  hasEmitted: boolean; // has received at least one value\n  /**\n   * If this is `true`, the hook will be emitting no further items.\n   */\n  isComplete: boolean;\n  /**\n   * The most recent value.\n   *\n   * If `initialData` is passed in, the first value of `data` will be the valuea provided in `initialData` **UNLESS** the underlying observable is ready, in which case it will skip `initialData`.\n   */\n  data: T;\n  /**\n   * Any error that may have occurred in the underlying observable\n   */\n  error: Error | undefined;\n  /**\n   * Promise that resolves after first emit from observable\n   */\n  firstValuePromise: Promise<void>;\n}\n\nexport function useObservable<T = unknown>(observableId: string, source: Observable<T>, config: ReactFireOptions = {}): ObservableStatus<T> {\n  if (!observableId) {\n    throw new Error('cannot call useObservable without an observableId');\n  }\n  const observable = preloadObservable(source, observableId);\n\n  const hasInitialData = config.hasOwnProperty('initialData') || config.hasOwnProperty('startWithValue');\n\n  const suspenseEnabled = useSuspenseEnabledFromConfigAndContext(config.suspense);\n\n  if (suspenseEnabled === true && !observable.hasValue && (!config?.initialData ?? !config?.startWithValue)) {\n    throw observable.firstEmission;\n  }\n\n  const [latest, setValue] = React.useState(() => (observable.hasValue ? observable.value : config.initialData ?? config.startWithValue));\n  const [isComplete, setIsComplete] = React.useState(false);\n  const [hasError, setHasError] = React.useState(false);\n  React.useEffect(() => {\n    const subscription = observable.subscribe({\n      next: (v) => {\n        setValue(() => v);\n      },\n      error: (e) => {\n        setHasError(true);\n        throw e;\n      },\n      complete: () => {\n        setIsComplete(true);\n      },\n    });\n    return () => subscription.unsubscribe();\n  }, [observable]);\n\n  let status: ObservableStatus<T>['status'];\n\n  if (hasError) {\n    status = 'error';\n  } else if (observable.hasValue || hasInitialData) {\n    status = 'success';\n  } else {\n    status = 'loading';\n  }\n\n  return {\n    status,\n    hasEmitted: observable.hasValue || hasInitialData,\n    isComplete: isComplete,\n    data: latest,\n    error: observable.ourError,\n    firstValuePromise: observable.firstEmission,\n  };\n}\n","import { collectionData, doc, docData, fromRef } from 'rxfire/firestore';\nimport { ReactFireOptions, useObservable, checkIdField, ReactFireGlobals } from './';\nimport { preloadObservable, ObservableStatus } from './useObservable';\nimport { first } from 'rxjs/operators';\n\nimport { Query as FirestoreQuery, QuerySnapshot, DocumentReference, queryEqual, DocumentData, DocumentSnapshot } from 'firebase/firestore';\n\n// Since we're side-effect free, we need to ensure our observableId cache is global\nconst cachedQueries: Array<FirestoreQuery> = (globalThis as any as ReactFireGlobals)._reactFireFirestoreQueryCache || [];\n\nif (!(globalThis as any as ReactFireGlobals)._reactFireFirestoreQueryCache) {\n  (globalThis as any as ReactFireGlobals)._reactFireFirestoreQueryCache = cachedQueries;\n}\n\nfunction getUniqueIdForFirestoreQuery(query: FirestoreQuery) {\n  const index = cachedQueries.findIndex((cachedQuery) => queryEqual(cachedQuery, query));\n  if (index > -1) {\n    return index;\n  }\n  return cachedQueries.push(query) - 1;\n}\n\n/**\n * Preload a subscription to a Firestore document reference.\n *\n * Use this to warm up `useFirestoreDoc` for a specific document\n */\nexport async function preloadFirestoreDoc(refProvider: () => Promise<DocumentReference>) {\n  const ref = await refProvider();\n  return preloadObservable(doc(ref), getDocObservableId(ref));\n}\n\nfunction getDocObservableId(ref: DocumentReference) {\n  return `firestore:doc:${ref.firestore.app.name}:${ref.path}`;\n}\n\n/**\n * Suscribe to Firestore Document changes\n *\n * You can preload data for this hook by calling `preloadFirestoreDoc`\n */\nexport function useFirestoreDoc<T = DocumentData>(ref: DocumentReference<T>, options?: ReactFireOptions<T>): ObservableStatus<DocumentSnapshot<T>> {\n  const observableId = getDocObservableId(ref);\n  const observable$ = doc(ref);\n\n  return useObservable(observableId, observable$, options);\n}\n\n/**\n * Get a firestore document and don't subscribe to changes\n */\nexport function useFirestoreDocOnce<T = DocumentData>(ref: DocumentReference<T>, options?: ReactFireOptions<T>): ObservableStatus<DocumentSnapshot<T>> {\n  const observableId = `firestore:docOnce:${ref.firestore.app.name}:${ref.path}`;\n  const observable$ = doc(ref).pipe(first());\n\n  return useObservable(observableId, observable$, options);\n}\n\n/**\n * Suscribe to Firestore Document changes and unwrap the document into a plain object\n */\nexport function useFirestoreDocData<T = unknown>(ref: DocumentReference<T>, options?: ReactFireOptions<T>): ObservableStatus<T> {\n  const idField = options ? checkIdField(options) : 'NO_ID_FIELD';\n\n  const observableId = `firestore:docData:${ref.firestore.app.name}:${ref.path}:idField=${idField}`;\n  const observable = docData(ref, idField);\n\n  return useObservable(observableId, observable, options);\n}\n\n/**\n * Get a Firestore document, unwrap the document into a plain object, and don't subscribe to changes\n */\nexport function useFirestoreDocDataOnce<T = unknown>(ref: DocumentReference<T>, options?: ReactFireOptions<T>): ObservableStatus<T> {\n  const idField = options ? checkIdField(options) : 'NO_ID_FIELD';\n\n  const observableId = `firestore:docDataOnce:${ref.firestore.app.name}:${ref.path}:idField=${idField}`;\n  const observable$ = docData(ref, idField).pipe(first());\n\n  return useObservable(observableId, observable$, options);\n}\n\n/**\n * Subscribe to a Firestore collection\n */\nexport function useFirestoreCollection<T = DocumentData>(query: FirestoreQuery<T>, options?: ReactFireOptions<T[]>): ObservableStatus<QuerySnapshot<T>> {\n  const observableId = `firestore:collection:${getUniqueIdForFirestoreQuery(query)}`;\n  const observable$ = fromRef(query);\n\n  return useObservable(observableId, observable$, options);\n}\n\n/**\n * Subscribe to a Firestore collection and unwrap the snapshot into an array.\n */\nexport function useFirestoreCollectionData<T = DocumentData>(query: FirestoreQuery<T>, options?: ReactFireOptions<T[]>): ObservableStatus<T[]> {\n  const idField = options ? checkIdField(options) : 'NO_ID_FIELD';\n  const observableId = `firestore:collectionData:${getUniqueIdForFirestoreQuery(query)}:idField=${idField}`;\n  const observable$ = collectionData(query, idField);\n\n  return useObservable(observableId, observable$, options);\n}\n","import { useRemoteConfig } from './';\nimport { useObservable, ObservableStatus } from './useObservable';\nimport { getValue, getString, getBoolean, getNumber, getAll, AllParameters } from 'rxfire/remote-config';\nimport { Observable } from 'rxjs';\n\nimport type { RemoteConfig, Value as RemoteConfigValue } from 'firebase/remote-config';\n\ntype Getter$<T> = (remoteConfig: RemoteConfig, key: string) => Observable<T>;\n\ninterface RemoteConfigWithPrivate extends RemoteConfig {\n  // This might be private, assume optional\n  app?: { name: string };\n}\n\n/**\n * Helper function to construct type safe functions. Since Remote Config has\n * methods that return different types for values, we need to be extra safe\n * to make sure we are not returning improper types by accident.\n * @param key\n * @param getter\n * @param remoteConfig\n */\nfunction useRemoteConfigValue_INTERNAL<T>(key: string, getter: Getter$<T>): ObservableStatus<T> {\n  const remoteConfig = useRemoteConfig();\n\n  // Waiting on clarity https://github.com/firebase/firebase-js-sdk/issues/5346\n  // const appName = remoteConfig.app.name\n  const appName = (remoteConfig as RemoteConfigWithPrivate).app?.name;\n  const $value = getter(remoteConfig, key);\n\n  const observableId = `remoteConfig:${key}:${getter.name}:${appName}`;\n  return useObservable<T>(observableId, $value);\n}\n\n/**\n * Accepts a key and optionally a Remote Config instance. Returns a\n * Remote Config Value.\n *\n * @param key The parameter key in Remote Config\n * @param remoteConfig Optional instance. If not provided ReactFire will either grab the default instance or lazy load.\n */\nexport function useRemoteConfigValue(key: string): ObservableStatus<RemoteConfigValue> {\n  return useRemoteConfigValue_INTERNAL<RemoteConfigValue>(key, getValue);\n}\n\n/**\n * Convience method similar to useRemoteConfigValue. Returns a `string` from a Remote Config parameter.\n * @param key The parameter key in Remote Config\n * @param remoteConfig Optional instance. If not provided ReactFire will either grab the default instance or lazy load.\n */\nexport function useRemoteConfigString(key: string): ObservableStatus<string> {\n  return useRemoteConfigValue_INTERNAL<string>(key, getString);\n}\n\n/**\n * Convience method similar to useRemoteConfigValue. Returns a `number` from a Remote Config parameter.\n * @param key The parameter key in Remote Config\n * @param remoteConfig Optional instance. If not provided ReactFire will either grab the default instance or lazy load.\n */\nexport function useRemoteConfigNumber(key: string): ObservableStatus<number> {\n  return useRemoteConfigValue_INTERNAL<number>(key, getNumber);\n}\n\n/**\n * Convience method similar to useRemoteConfigValue. Returns a `boolean` from a Remote Config parameter.\n * @param key The parameter key in Remote Config\n * @param remoteConfig Optional instance. If not provided ReactFire will either grab the default instance or lazy load.\n */\nexport function useRemoteConfigBoolean(key: string): ObservableStatus<boolean> {\n  return useRemoteConfigValue_INTERNAL<boolean>(key, getBoolean);\n}\n\n/**\n * Convience method similar to useRemoteConfigValue. Returns allRemote Config parameters.\n * @param key The parameter key in Remote Config\n * @param remoteConfig Optional instance. If not provided ReactFire will either grab the default instance or lazy load.\n */\nexport function useRemoteConfigAll(key: string): ObservableStatus<AllParameters> {\n  return useRemoteConfigValue_INTERNAL<AllParameters>(key, getAll);\n}\n","import * as React from 'react';\nimport { getDownloadURL } from 'rxfire/storage';\nimport { Observable } from 'rxjs';\nimport { ReactFireOptions, useObservable, ObservableStatus, useStorage } from './';\nimport { useSuspenseEnabledFromConfigAndContext } from './firebaseApp';\nimport { ref } from 'firebase/storage';\n\nimport type { UploadTask, UploadTaskSnapshot, StorageReference, FirebaseStorage } from 'firebase/storage';\n\n/**\n * modified version of rxFire's _fromTask\n *\n * @param task\n */\nfunction _fromTask(task: UploadTask) {\n  return new Observable<UploadTaskSnapshot>((subscriber) => {\n    const progress = (snap: UploadTaskSnapshot) => {\n      return subscriber.next(snap);\n    };\n    const error = (e: any) => subscriber.error(e);\n    const complete = () => {\n      return subscriber.complete();\n    };\n    task.on('state_changed', progress, error, complete);\n\n    // I REMOVED THE UNSUBSCRIBE RETURN BECAUSE IT CANCELS THE UPLOAD\n    // https://github.com/firebase/firebase-js-sdk/issues/1659\n  });\n}\n\n/**\n * Subscribe to the progress of a storage task\n *\n * @param task - the task you want to listen to\n * @param ref - reference to the blob the task is acting on\n * @param options\n */\nexport function useStorageTask<T = unknown>(task: UploadTask, ref: StorageReference, options?: ReactFireOptions<T>): ObservableStatus<UploadTaskSnapshot | T> {\n  const observableId = `storage:task:${ref.toString()}`;\n  const observable$ = _fromTask(task);\n\n  return useObservable(observableId, observable$, options);\n}\n\n/**\n * Subscribe to a storage ref's download URL\n *\n * @param ref - reference to the blob you want to download\n * @param options\n */\nexport function useStorageDownloadURL<T = string>(ref: StorageReference, options?: ReactFireOptions<T>): ObservableStatus<string | T> {\n  const observableId = `storage:downloadUrl:${ref.toString()}`;\n  const observable$ = getDownloadURL(ref);\n\n  return useObservable(observableId, observable$, options);\n}\n\ntype StorageImageProps = {\n  storagePath: string;\n  storage?: FirebaseStorage;\n  suspense?: boolean;\n  placeHolder?: JSX.Element;\n};\n\nfunction StorageFromContext(props: StorageImageProps & React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>) {\n  const storage = useStorage();\n\n  props = { ...props, storage };\n\n  return <INTERNALStorageImage {...props} />;\n}\n\nfunction INTERNALStorageImage(props: StorageImageProps & React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>): JSX.Element {\n  let { storage, storagePath, suspense, placeHolder, ...imgProps } = props;\n\n  const reactfireOptions: ReactFireOptions<string> = {\n    suspense: useSuspenseEnabledFromConfigAndContext(suspense),\n  };\n\n  if (!storage) {\n    throw new Error('Storage was not passed to component INTERNALStorageImage. This should not be possible');\n  }\n\n  const { status, data: imgSrc } = useStorageDownloadURL(ref(storage, storagePath), reactfireOptions);\n\n  if (status === 'success') {\n    if (!(imgProps.alt || imgProps.alt === '')) {\n      console.warn(\n        `No alt prop provided for StorageImage with storagePath \"${storagePath}\"`,\n        'img elements must have an alt prop, either with meaningful text, or an empty string for decorative images'\n      );\n    }\n\n    return <img src={imgSrc} alt={imgProps.alt} {...imgProps} />;\n  } else {\n    return placeHolder ?? <>''</>;\n  }\n}\n\nexport function StorageImage(props: StorageImageProps & React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>) {\n  let { storage } = props;\n\n  if (storage) {\n    return <INTERNALStorageImage {...props} />;\n  } else {\n    return <StorageFromContext {...props} />;\n  }\n}\n","import * as React from 'react';\n\nimport type { Analytics } from 'firebase/analytics';\nimport type { AppCheck } from 'firebase/app-check';\nimport type { Auth } from 'firebase/auth';\nimport type { Database } from 'firebase/database';\nimport type { Firestore } from 'firebase/firestore';\nimport type { FirebasePerformance } from 'firebase/performance';\nimport type { FirebaseStorage } from 'firebase/storage';\nimport type { Functions } from 'firebase/functions';\nimport type { RemoteConfig } from 'firebase/remote-config';\nimport { useFirebaseApp } from './firebaseApp';\nimport { FirebaseApp } from 'firebase/app';\nimport { ObservableStatus, useObservable } from './useObservable';\nimport { from } from 'rxjs';\nimport { ReactFireOptions } from '.';\n\nconst AnalyticsSdkContext = React.createContext<Analytics | undefined>(undefined);\nconst AppCheckSdkContext = React.createContext<AppCheck | undefined>(undefined);\nconst AuthSdkContext = React.createContext<Auth | undefined>(undefined);\nconst DatabaseSdkContext = React.createContext<Database | undefined>(undefined);\nconst FirestoreSdkContext = React.createContext<Firestore | undefined>(undefined);\nconst FunctionsSdkContext = React.createContext<Functions | undefined>(undefined);\nconst StorageSdkContext = React.createContext<FirebaseStorage | undefined>(undefined);\nconst PerformanceSdkContext = React.createContext<FirebasePerformance | undefined>(undefined);\nconst RemoteConfigSdkContext = React.createContext<RemoteConfig | undefined>(undefined);\n\ntype FirebaseSdks = Analytics | AppCheck | Auth | Database | Firestore | Functions | FirebasePerformance | FirebaseStorage | RemoteConfig;\n\nfunction getSdkProvider<Sdk extends FirebaseSdks>(SdkContext: React.Context<Sdk | undefined>) {\n  return function SdkProvider(props: React.PropsWithChildren<{ sdk: Sdk }>) {\n    if (!props.sdk) throw new Error('no sdk provided');\n\n    const contextualAppName = useFirebaseApp().name;\n    // Waiting on clarity https://github.com/firebase/firebase-js-sdk/issues/5346\n    // In the meantime the following code passes typescript checks.\n    const sdkAppName = 'app' in props.sdk && 'name' in props.sdk.app ? props.sdk.app.name : 'name' in props.sdk ? props.sdk.name : ''; // props.sdk?.app?.name\n\n    if (sdkAppName !== contextualAppName) throw new Error('sdk was initialized with a different firebase app');\n\n    return <SdkContext.Provider value={props.sdk} {...props} />;\n  };\n}\n\nfunction useSdk<Sdk extends FirebaseSdks>(SdkContext: React.Context<Sdk | undefined>): Sdk {\n  const sdk = React.useContext(SdkContext);\n\n  if (!sdk) {\n    throw new Error('SDK not found. useSdk must be called from within a provider');\n  }\n\n  return sdk;\n}\n\nfunction useInitSdk<Sdk extends FirebaseSdks>(\n  sdkName: string,\n  SdkContext: React.Context<Sdk | undefined>,\n  sdkInitializer: (firebaseApp: FirebaseApp) => Promise<Sdk>,\n  options?: ReactFireOptions\n) {\n  const firebaseApp = useFirebaseApp();\n\n  // Some initialization functions (like Firestore's `enableIndexedDbPersistence`)\n  // can only be called before anything else. So if an sdk is already available in context,\n  // it isn't safe to call initialization functions again.\n  if (React.useContext(SdkContext)) {\n    throw new Error(`Cannot initialize SDK ${sdkName} because it already exists in Context`);\n  }\n\n  const initializeSdk = React.useMemo(() => sdkInitializer(firebaseApp), [firebaseApp, sdkInitializer]);\n\n  return useObservable<Sdk>(`firebase-sdk:${sdkName}:${firebaseApp.name}`, from(initializeSdk), options);\n}\n\nexport const AppCheckProvider = getSdkProvider<AppCheck>(AppCheckSdkContext);\nexport const AnalyticsProvider = getSdkProvider<Analytics>(AnalyticsSdkContext);\nexport const AuthProvider = getSdkProvider<Auth>(AuthSdkContext);\nexport const DatabaseProvider = getSdkProvider<Database>(DatabaseSdkContext);\nexport const FirestoreProvider = getSdkProvider<Firestore>(FirestoreSdkContext);\nexport const FunctionsProvider = getSdkProvider<Functions>(FunctionsSdkContext);\nexport const PerformanceProvider = getSdkProvider<FirebasePerformance>(PerformanceSdkContext);\nexport const StorageProvider = getSdkProvider<FirebaseStorage>(StorageSdkContext);\nexport const RemoteConfigProvider = getSdkProvider<RemoteConfig>(RemoteConfigSdkContext);\n\nexport const useAppCheck = () => useSdk<AppCheck>(AppCheckSdkContext);\nexport const useAnalytics = () => useSdk<Analytics>(AnalyticsSdkContext);\nexport const useAuth = () => useSdk<Auth>(AuthSdkContext);\nexport const useDatabase = () => useSdk<Database>(DatabaseSdkContext);\nexport const useFirestore = () => useSdk<Firestore>(FirestoreSdkContext);\nexport const useFunctions = () => useSdk<Functions>(FunctionsSdkContext);\nexport const usePerformance = () => useSdk<FirebasePerformance>(PerformanceSdkContext);\nexport const useStorage = () => useSdk<FirebaseStorage>(StorageSdkContext);\nexport const useRemoteConfig = () => useSdk<RemoteConfig>(RemoteConfigSdkContext);\n\ntype InitSdkHook<Sdk extends FirebaseSdks> = (\n  initializer: (firebaseApp: FirebaseApp) => Promise<Sdk>,\n  options?: ReactFireOptions<Sdk>\n) => ObservableStatus<Sdk>;\n\nexport const useInitAppCheck: InitSdkHook<AppCheck> = (initializer, options) => useInitSdk<AppCheck>('appcheck', AppCheckSdkContext, initializer, options);\nexport const useInitAnalytics: InitSdkHook<Analytics> = (initializer, options) => useInitSdk<Analytics>('analytics', AnalyticsSdkContext, initializer, options);\nexport const useInitAuth: InitSdkHook<Auth> = (initializer, options) => useInitSdk<Auth>('auth', AuthSdkContext, initializer, options);\nexport const useInitDatabase: InitSdkHook<Database> = (initializer, options) => useInitSdk<Database>('database', DatabaseSdkContext, initializer, options);\nexport const useInitFirestore: InitSdkHook<Firestore> = (initializer, options) => useInitSdk<Firestore>('firestore', FirestoreSdkContext, initializer, options);\nexport const useInitFunctions: InitSdkHook<Functions> = (initializer, options) => useInitSdk<Functions>('functions', FunctionsSdkContext, initializer, options);\nexport const useInitPerformance: InitSdkHook<FirebasePerformance> = (initializer, options) =>\n  useInitSdk<FirebasePerformance>('performance', PerformanceSdkContext, initializer, options);\nexport const useInitRemoteConfig: InitSdkHook<RemoteConfig> = (initializer, options) =>\n  useInitSdk<RemoteConfig>('remoteconfig', RemoteConfigSdkContext, initializer, options);\nexport const useInitStorage: InitSdkHook<FirebaseStorage> = (initializer, options) =>\n  useInitSdk<FirebaseStorage>('storage', StorageSdkContext, initializer, options);\n","import { SuspenseSubject } from './SuspenseSubject';\n\nimport type { Query as FirestoreQuery } from 'firebase/firestore';\nimport type { Query as DatabaseQuery } from 'firebase/database';\n\nexport type ReactFireGlobals = {\n  _reactFireDatabaseCachedQueries: Array<DatabaseQuery>;\n  _reactFireFirestoreQueryCache: Array<FirestoreQuery>;\n  _reactFirePreloadedObservables: Map<string, SuspenseSubject<any>>;\n};\n\nexport class ReactFireError extends Error {\n  readonly name = 'ReactFireError';\n\n  constructor(readonly code: string, message: string, public customData?: Record<string, unknown>) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, ReactFireError.prototype);\n  }\n}\n\nexport interface ReactFireOptions<T = unknown> {\n  idField?: string;\n  initialData?: T | any;\n  /**\n   * @deprecated use initialData instead\n   */\n  startWithValue?: T | any;\n  suspense?: boolean;\n}\n\nexport function checkOptions(options: ReactFireOptions, field: string) {\n  // make sure the field passed in is a valid key of ReactFire Options\n  if (field === 'idField' || field === 'initialData' || field === 'suspense') {\n    return options ? (options[field] as ReactFireOptions['idField'] | ReactFireOptions['initialData'] | ReactFireOptions['suspense']) : undefined;\n  }\n\n  throw new Error(`Field \"${field}\" is not a valid key in ReactFireOptions`);\n}\n\nexport function checkinitialData(options: ReactFireOptions) {\n  return checkOptions(options, 'initialData');\n}\n\nexport function checkIdField(options: ReactFireOptions) {\n  return checkOptions(options, 'idField');\n}\n\nexport * from './auth';\nexport * from './database';\nexport * from './firebaseApp';\nexport * from './firestore';\nexport * from './performance';\nexport * from './remote-config';\nexport * from './storage';\nexport * from './useObservable';\nexport * from './sdk';\n","import * as React from 'react';\n\nexport interface SuspensePerfProps {\n  children: React.ReactNode;\n  traceId: string;\n  fallback: React.ReactNode;\n}\n\nexport function SuspenseWithPerf({ children, traceId, fallback }: SuspensePerfProps): JSX.Element {\n  // TODO: Should this import firebase/performance?\n\n  const entries = performance?.getEntriesByName?.(traceId, 'measure') || [];\n  const startMarkName = `_${traceId}Start[${entries.length}]`;\n  const endMarkName = `_${traceId}End[${entries.length}]`;\n\n  const Fallback = () => {\n    React.useLayoutEffect(() => {\n      performance?.mark?.(startMarkName);\n\n      return () => {\n        performance?.mark?.(endMarkName);\n        performance?.measure?.(traceId, startMarkName, endMarkName);\n      };\n    }, []);\n\n    return <>{fallback}</>;\n  };\n\n  return <React.Suspense fallback={<Fallback />}>{children}</React.Suspense>;\n}\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","FirebaseAppContext","React","SuspenseEnabledContext","useSuspenseEnabledFromConfigAndContext","suspenseFromConfig","suspenseFromContext","useFirebaseApp","firebaseApp","authResolver","user$","preloadObservable","user","auth","toPromise","useUser","options","useAuth","observableId","observable$","currentUser","initialData","startWithValue","useObservable","useIdTokenResult","forceRefresh","uid","from","getIdTokenResult","ClaimsCheck","fallback","children","requiredClaims","claims","data","missingClaims","console","warn","claim","expected","actual","_claims$claim","toString","cachedQueries","_reactFireDatabaseCachedQueries","getUniqueIdForDatabaseQuery","query","index","findIndex","cachedQuery","isEqual","SuspenseSubject","innerObservable","_timeoutWindow","_value","_hasValue","_timeoutHandler","_firstEmission","_error","_innerObservable","_warmupSubscription","_innerSubscriber","_resolveFirstEmission","_this","pipe","tap","v","_next","e","catchError","empty","shareReplay","subscribe","setTimeout","_reset","bind","unsubscribe","_this2","_subscribe","subscriber","clearTimeout","Subject","preloadedObservables","_reactFirePreloadedObservables","Map","source","id","has","get","observable","set","config","hasInitialData","suspense","hasValue","_config","_config2","firstEmission","latest","setValue","isComplete","setIsComplete","hasError","setHasError","subscription","status","hasEmitted","ourError","firstValuePromise","_reactFireFirestoreQueryCache","getUniqueIdForFirestoreQuery","queryEqual","refProvider","doc","ref","getDocObservableId","firestore","app","path","useRemoteConfigValue_INTERNAL","getter","remoteConfig","useRemoteConfig","appName","_remoteConfig$app","$value","useStorageDownloadURL","getDownloadURL","StorageFromContext","props","storage","useStorage","INTERNALStorageImage","storagePath","placeHolder","imgProps","reactfireOptions","imgSrc","alt","src","AnalyticsSdkContext","AppCheckSdkContext","AuthSdkContext","DatabaseSdkContext","FirestoreSdkContext","FunctionsSdkContext","StorageSdkContext","PerformanceSdkContext","RemoteConfigSdkContext","getSdkProvider","SdkContext","sdk","contextualAppName","Provider","useSdk","useInitSdk","sdkName","sdkInitializer","initializeSdk","AppCheckProvider","AnalyticsProvider","AuthProvider","DatabaseProvider","FirestoreProvider","FunctionsProvider","PerformanceProvider","StorageProvider","RemoteConfigProvider","ReactFireError","code","message","customData","checkOptions","field","checkIdField","firebaseConfig","a","b","existingApp","getApps","find","every","registerVersion","initializeApp","traceId","entries","performance","getEntriesByName","startMarkName","endMarkName","measure","list","idField","listVal","keyField","map","change","val","snapshot","changeToData","fromRef","collectionData","docData","first","initializer","getAll","getBoolean","getNumber","getString","getValue","JSON","stringify","validateCustomClaims","switchMap","idTokenResult","validator","userClaims","errors","hasRequiredClaims","signedIn","of","task","Observable","on","snap","_fromTask"],"mappings":"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"}